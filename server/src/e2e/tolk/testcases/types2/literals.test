========================================================================
Empty test
========================================================================
//
------------------------------------------------------------------------
ok

========================================================================
Number literal type
========================================================================
fun main() {
    val a = 100;
    //! ^ int
}
------------------------------------------------------------------------
ok

========================================================================
String literal type
========================================================================
fun main() {
    val a = "hello";
    //! ^ slice
}
------------------------------------------------------------------------
ok

========================================================================
Boolean true literal type
========================================================================
fun main() {
    val a = true;
    //! ^ bool
}
------------------------------------------------------------------------
ok

========================================================================
Boolean false literal type
========================================================================
fun main() {
    val a = false;
    //! ^ bool
}
------------------------------------------------------------------------
ok

========================================================================
Null literal type
========================================================================
fun main() {
    val a = null;
    //! ^ null
}
------------------------------------------------------------------------
ok

========================================================================
Variable reference type
========================================================================
fun main() {
    val someValue = 100;

    someValue;
//! ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Ternary expression with same type in branches
========================================================================
fun main(cond: bool) {
    val intVal = 100;

    val result = cond ? intVal : 10
//!     ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Ternary expression with different type in branches
========================================================================
fun main(cond: bool) {
    val intVal = 100;

    val result = cond ? intVal : true
//!     ^ int | bool
}
------------------------------------------------------------------------
ok

========================================================================
Ternary expression with null type in branches
========================================================================
fun main(cond: bool) {
    val intVal = 100;

    val result = cond ? intVal : null
//!     ^ int?
}
------------------------------------------------------------------------
ok

========================================================================
Ternary expression with null type in branches 2
========================================================================
fun main(cond: bool) {
    val intVal = 100;

    val result = cond ? null : intVal
//!     ^ int?
}
------------------------------------------------------------------------
ok
