========================================================================
Empty test
========================================================================
//
------------------------------------------------------------------------
ok

========================================================================
Full object literal
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val a = Foo { value: 10 };
    //! ^ Foo
}
------------------------------------------------------------------------
ok

========================================================================
Short object literal with hint from variable type hint
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val a: Foo = { value: 10 };
    //! ^ Foo
}
------------------------------------------------------------------------
ok

========================================================================
Full object literal fields
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val a = Foo { value: 10 };
//!               ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Short object literal fields with hint from variable type hint
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val a: Foo = { value: 10 };
//!                ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Short object literal fields with hint from variable type hint and short field init
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val value = 10;
    val a: Foo = { value };
//!                ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Short object literal as value of field
========================================================================
struct Foo {
    value: int,
}

struct Bar {
    data: Foo,
}

fun main() {
    Bar {
        data: {
//!           ^ Foo
            value: 10,
//!         ^ int
        }
    }
}
------------------------------------------------------------------------
ok

========================================================================
Short object literal as argument of function
========================================================================
struct Foo {
    value: int,
}

fun takeFoo(foo: Foo) {}

fun main() {
   takeFoo({
//!        ^ Foo
        value: 10,
//!     ^ int
    })
}
------------------------------------------------------------------------
ok

========================================================================
Short object literal as default argument of function
========================================================================
struct Foo {
    value: int,
}

fun takeFoo(foo: Foo = {
//!                    ^ Foo
    value: 10,
//! ^ int
}) {}
------------------------------------------------------------------------
ok

========================================================================
Struct instance as argument of instance method called as static
========================================================================
struct Foo {
    value: int,
}

fun Foo.name(self): self {}

fun main() {
    val foo: Foo = {};
    val res =
//!     ^ Foo
        Foo.name({
//!     ^ Foo
            value: 10,
//!         ^ int
        });
}
------------------------------------------------------------------------
ok

========================================================================
Struct instance as right side of assignment of smart casted field
========================================================================
struct Bar {
    value: int,
}

struct Foo {
    data: Bar?,
}

fun main() {
    val foo: Foo;
    if (foo.data == null) {
        foo.data = {
//!                ^ Bar
            value: 1,
//!         ^ int
        };
    }
}
------------------------------------------------------------------------
ok

========================================================================
Struct instance with incomplete long field
========================================================================
struct Bar {
    value: int,
}

fun main() {
    val bar: Bar = {
        value: ,
//!     ^ int
    }
}
------------------------------------------------------------------------
ok
