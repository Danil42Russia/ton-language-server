========================================================================
Field access
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val foo = Foo {};
    val res = foo.value;
//!     ^ int
    foo.value;
//!     ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Field access via alias
========================================================================
struct Foo {
    value: int,
}

type FooAlias = Foo;

fun main() {
    val foo = FooAlias {};
    val res = foo.value;
//!     ^ int
    foo.value;
//!     ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Field field access
========================================================================
struct Foo {
    value: Bar,
}

struct Bar {
    other: int;
}

fun main() {
    val foo = Foo {};
    val res = foo.value.other;
//!     ^ int
    foo.value.other;
//!           ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Struct static method
========================================================================
struct Foo {
    value: int,
}

fun Foo.bar(): int {}

fun main() {
    val foo = Foo.bar();
//!     ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Builtin type static method
========================================================================
fun int.bar(): int {}

fun main() {
    val foo = int.bar();
//!     ^ int
}
------------------------------------------------------------------------
ok

========================================================================
Struct instance method
========================================================================
struct Foo {
    value: int,
}

fun Foo.bar(self): slice {}

fun main() {
    val foo = Foo{}.bar();
//!     ^ slice
}
------------------------------------------------------------------------
ok

========================================================================
Index access for tuple
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val foo = [1, 2, true, Foo {}];
    val res1 = foo.0;
//!     ^ int
    val res2 = foo.1;
//!     ^ int
    val res3 = foo.2;
//!     ^ bool
    val res4 = foo.3;
//!     ^ Foo
}
------------------------------------------------------------------------
ok

========================================================================
Index access for tuple 2
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val foo: [int, int, bool, Foo] = [1, 2, true, { value: 10 }];
//!                                                 ^ int
    val res1 = foo.0;
//!     ^ int
    val res2 = foo.1;
//!     ^ int
    val res3 = foo.2;
//!     ^ bool
    val res4 = foo.3;
//!     ^ Foo
}
------------------------------------------------------------------------
ok

========================================================================
Index access for tensor
========================================================================
struct Foo {
    value: int,
}

fun main() {
    val foo = (1, 2, true, Foo {});
    val res1 = foo.0;
//!     ^ int
    val res2 = foo.1;
//!     ^ int
    val res3 = foo.2;
//!     ^ bool
    val res4 = foo.3;
//!     ^ Foo
}
------------------------------------------------------------------------
ok
